pipeline {

    agent any

    environment {
        DB_HOST = "mongo"
    }
    
    stages {
        
        stage('Cloning Git') {
            steps {
                git branch: 'master',
                    credentialsId: 'd1dff7cf-e8ec-4a5b-895d-fc3467eb34de',
                    url: 'link do seu repositorio'
                sh "ls -lat"
                sh 'snyk auth ${SNYK_TOKEN}'
            }
        }

        stage('Build') {
            steps {
                sh 'npm i'
            }
        }

        stage('Test') {
            steps {
                sh 'npm test'
            }
        }

        stage('Deploy Docker') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'docker login --username $USERNAME --password $PASSWORD'
                }
                sh 'chmod +x ./deploy-docker.sh  && ./deploy-docker.sh'
            }
        }
        
        stage('Deploy Server') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'sshpass', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                     sh "sshpass -p $PASSWORD ssh -A -o StrictHostKeyChecking=no -T $USERNAME@ipdoservidor 'comandos shell'"
                }
            }
        }
        
    }

    post {
        
        always {
            step([$class: 'CoberturaPublisher', coberturaReportFile: 'coverage/cobertura-coverage.xml'])
        }
        
        failure {
            updateGitlabCommitStatus name: 'build', state: 'failed'
        }
        
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
        }
        
    }
}